"use srtict";

//Задача №1
//Яка назва змінної вірна
//1) let user-name
//2) let UserName
//3) let userName

//Задача №2
//Чи буде помилка при виконанні наступної програми
//const userName = 20
//userName = "Іштван"

//Задача №3
//Що потрапить в консоль?
//let numOne = 20
//let numTwo = "20"

//let numSumm = numOne + numTwo
//console.log(numSumm)

//Задача №1
//Яка назва змінної вірна:
//❌ 1) let user-name
//❌ 2) let UserName
//✅ 3) let userName

//Пояснення:
//1) буде помилка через неприпустимий символ
//2) помилки не буде, але не відповідає загальному стилю lowerCamelCase
//3) це правильний стиль: lowerCamelCase

//Задача №2
//Чи буде помилка при виконанні наступної програми:
//const userName = 20
//userName = "Іштван"

//Пояснення:
//Так, буде помилка. Змінні визначені за допомогою const не можуть бути передекларовані повторно і не можуть бути перепризначені. Але можна міняти вміст масиву та об'єкту, тому що const захищає тільки посилання на масив або об'єкт, а не його вміст.
//Приклад:
//const user = { name: "Vladyslav" };
//user.name = "Yevhenii";

//Задача №3
//Що потрапить в консоль?
//let numOne = 20
//let numTwo = "20"

//let numSumm = numOne + numTwo
//console.log(numSumm)

//Пояснення:
//В консоль потрапить: "2020". Оператор + в JS викликає конкатенацію якщо хоча б один з операндів рядок. Він автоматично перетворює число 20 на рядок "20" і об'єднує їх.
//Рішення якщо потрібно об'єднати числа, треба явно привести рядок до числа:
//let numSumm = numOne + Number(numTwo);
